C51 COMPILER V9.54   MAIN                                                                  08/05/2018 17:33:53 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //µ¥Æ¬»úSTC15F2K60S2£¬ÄÚ²¿11.0592¾§Õñ£¬´®¿Ú9600¡£
   2          
   3          #include"stc15f2k60s2.h"
   4          #include "spi.h"
   5          #include <string.h>
   6          
   7          sbit ADS_SCLK  =  P1^5; 
   8          sbit ADS_DIN   =  P1^3; 
   9          sbit ADS_DOUT  =  P1^4;  
  10          sbit ADS_DRDY  =  P1^6; 
  11          sbit ADS_CS    =  P1^1; 
  12          sbit ADS_REST  =  P1^2; 
  13          sbit  LED2 = P5^5;
  14          
  15          unsigned long ADS1256ReadData(void);
  16          unsigned char SPI_SendByte(unsigned char SPI_SendData);
  17          
  18          void ADS1256_Init(void);
  19          void ADS_sum(unsigned char road);
  20          void sendStr(unsigned char *s);
  21          void sendChar(unsigned char ch);
  22          
  23          
  24          void Delay(unsigned int dal)
  25          {
  26   1        unsigned int i;
  27   1        for(i = 0;i < dal;i ++);
  28   1      }
  29          
  30          void sendChar(unsigned char ch)
  31          {
  32   1        SBUF = ch;
  33   1        while(TI == 0);
  34   1        TI = 0;
  35   1      }
  36          
  37          void sendStr(unsigned char *s)
  38          {   while(*s!='\0')         
  39   1       {  sendChar(*s);
  40   2          s++;       }   }
  41              
  42          
  43          
  44          
  45          void inteReceive (void) interrupt 4 using 1
  46          { if(RI == 1)
  47   1        {   RI = 0;   }
  48   1                      }
  49          
  50          void main()
  51          {   
  52   1        P1M0 = 0x00;
  53   1        P1M1 = 0x00;     
  54   1        SCON = 0x50;          //´®¿ÚÉèÖÃÆµÂÊ9600       
  55   1        TMOD = 0x20;         //8Î» ×Ô¶¯ÖØ×°ÔØ¶¨Ê±Æ÷                
C51 COMPILER V9.54   MAIN                                                                  08/05/2018 17:33:53 PAGE 2   

  56   1        AUXR =0X40;          //¿ªÆô1TÄ£Ê½   
  57   1        TH1 = TL1 = 0xDC;    //ÉèÖÃ²¨ÌØÂÊÎª9600 
  58   1        TR1 = 1;             //¿ªÆô¶¨Ê±Æ÷1                                                      
  59   1        ES = 1;              //¿ª´®¿ÚÖÐ¶Ï
  60   1        EA = 1;
  61   1        
  62   1        
  63   1        Init_SPI();    //Ó²¼þSPIÍ¨ÐÅÉèÖÃ
  64   1        ADS1256_Init();
  65   1      
  66   1        while(1)
  67   1        {
  68   2          ADS_sum(0x00 | 0x08);   
  69   2          Delay(65535);
  70   2          sendChar(0x0a); 
  71   2          Delay(65535);
  72   2          ADS_sum(0x10 | 0x08);       
  73   2          Delay(65535);
  74   2          sendChar(0x0a); 
  75   2          Delay(65535);         
  76   2          sendChar(0x0a);
  77   2          Delay(65535);   
  78   2          Delay(65535);
  79   2          Delay(65535);
  80   2          Delay(65535);
  81   2          Delay(65535);
  82   2          Delay(65535);
  83   2          Delay(65535);
  84   2          Delay(65535);
  85   2          Delay(65535);
  86   2          Delay(65535);
  87   2          Delay(65535);
  88   2          Delay(65535);
  89   2         
  90   2          LED2 =~LED2;   }   }
  91          
  92          
  93          void ADS1256WREG(unsigned char regaddr,unsigned char databyte)
  94          {   ADS_CS = 0;
  95   1          while(ADS_DRDY);//DRDYÎªµÍÊ±²ÅÄÜÐ´¼Ä´æÆ÷ 
  96   1          SPI_SendByte(0x50 | (regaddr & 0xF));
  97   1          SPI_SendByte(0);    
  98   1          SPI_SendByte(databyte); 
  99   1          ADS_CS = 1;       }
 100          
 101          unsigned long ADS1256ReadData(void)  
 102          {
 103   1          unsigned char i=0;
 104   1          unsigned long sum=0;
 105   1          unsigned long r=0;
 106   1        
 107   1        ADS_CS = 0;
 108   1        while(ADS_DRDY); 
 109   1        SPI_SendByte(0xfc);
 110   1        SPI_SendByte(0x00);                
 111   1        SPI_SendByte(0x01);
 112   1        ADS_SCLK = 0;
 113   1      
 114   1        for(i=0;i<3;i++)
 115   1      { sum = sum << 8;
 116   2        r = SPI_SendByte(0);  
 117   2        sum |= r;      }
C51 COMPILER V9.54   MAIN                                                                  08/05/2018 17:33:53 PAGE 3   

 118   1        ADS_CS = 1;    
 119   1        return sum;    }
 120          
 121          
 122          //³õÊ¼»¯
 123          void ADS1256_Init(void)
 124          {  
 125   1        ADS_CS = 0;
 126   1        ADS_REST = 1;
 127   1        ADS1256WREG(0x00,0x06);  // ¸ßÎ»ÔÚÇ°¡¢Ð£×¼¡¢Ê¹ÓÃ»º³å  
 128   1        ADS1256WREG(0x01,0x08);  // ³õÊ¼»¯¶Ë¿ÚA0Îª¡®+¡¯£¬AINCOMÎ»¡®-¡¯
 129   1        ADS1256WREG(0x02,0x01);  // ·Å´ó±¶Êý2,¸ù¾ÝÊäÈë¶Ë·ÖÑ¹µç×èÑ¡Ôñ
 130   1        ADS1256WREG(0x03,0x13);  // Êý¾Ý5sps
 131   1        ADS1256WREG(0x04,0x00);  // IO×´Ì¬ÊäÈë
 132   1        Delay(10);
 133   1        ADS_CS = 1;      }
 134            
 135            
 136           
 137          
 138          
 139          //¶ÁÈ¡ADS1256Êý¾Ý
 140          
 141          void ADS_sum(unsigned char road)
 142          {
 143   1        unsigned long results=0;
 144   1        unsigned long Result_sum=0;
 145   1        unsigned long fVoltage;
 146   1        unsigned char buf[10],i,rod;
 147   1      
 148   1        ADS1256WREG(0x01,road);   //ÉèÖÃÍ¨µÀ
 149   1        SPI_SendByte(0xf0);    //Æ«ÒÆºÍÔöÒæ×Ô¶¯Ð£×¼
 150   1        SPI_SendByte(0xf3);    //ÏµÍ³Ê§µ÷Ð£×¼
 151   1        SPI_SendByte(0xf4);    //ÏµÍ³ÔöÒæÐ£×¼
 152   1      
 153   1           
 154   1      
 155   1        ADS1256ReadData();//¶ÁÈ¡ADÖµ£¬Êý¾Ý¶ªÆú¡£¸ù¾ÝÊÖ²áP21 ±¾´Î¶ÁÈ¡µÄÊý¾ÝÊÇÉÏÒ»´Î×ª»»µÄÖµ
 156   1        ADS1256ReadData();//¶ÁÈ¡ADÖµ£¬Êý¾Ý¶ªÆú¡£
 157   1        results = ADS1256ReadData();//·µ»Ø24Î»Êý¾Ý¡£
 158   1        
 159   1        Result_sum =  results >> 4;
 160   1        if(Result_sum<0x80000)    
 161   1        {
 162   2          fVoltage=Result_sum*952;  //954=2*2.5/2^19*100000000   2.5Îª»ù×¼µçÑ¹  100000000ÎªÎªÁË¼ÆËãµÄ×¼È·ÐÔ×ª»»ÎªÕ
             -ûÐÎ¼ÆËã
 163   2                                    //952ÊÇµçÑ¹»ù×¼Êµ¼Ê²âÁ¿Îª2.498V
 164   2          buf[0]=(unsigned char)(fVoltage/100000000);
 165   2          buf[0]=buf[0]+0x30;
 166   2          buf[1]='.';
 167   2          buf[2]=(unsigned char)((fVoltage%100000000)/10000000);
 168   2          buf[2]=buf[2]+0x30;
 169   2          buf[3]=(unsigned char)((fVoltage%10000000)/1000000);
 170   2          buf[3]=buf[3]+0x30;
 171   2          buf[4]=(unsigned char)(fVoltage%1000000/100000);
 172   2          buf[4]=buf[4]+0x30;
 173   2          buf[5]=(unsigned char)(fVoltage%100000/10000);
 174   2          buf[5]=buf[5]+0x30;    
 175   2          buf[6]='V';            
 176   2          buf[7]=0x20;              }
 177   1         else 
 178   1      {   buf[0]=0+0x30;
C51 COMPILER V9.54   MAIN                                                                  08/05/2018 17:33:53 PAGE 4   

 179   2          buf[1]='.';
 180   2          buf[2]=0+0x30;
 181   2          buf[3]=0+0x30;
 182   2          buf[4]=0+0x30;
 183   2          buf[5]=0+0x30;     
 184   2          buf[6]='V';              
 185   2          buf[7]=0x20;
 186   2                                   }
 187   1        
 188   1         
 189   1        if(road/16 == 0)          
 190   1        rod = (0 + 0x30);       //½øÐÐÍ¨µÀ-1¼ÆËã
 191   1        else 
 192   1        rod = ((road/16  + 0x30) );
 193   1        sendStr("µÚ");
 194   1        sendChar(rod);
 195   1        sendStr("Â·£º");
 196   1        i=0;
 197   1        while(i<10)
 198   1      { sendChar(buf[i]);
 199   2        i++;              }  
 200   1                          }
 201          
 202          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    754    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
